language: android
jdk: oraclejdk8
sudo: required

env:
  global:
   # Increase timeout for installation to 8 minutes. Default is 2.
    - ADB_INSTALL_TIMEOUT=8
    - ABI=x86_64
    - EMU_FLAVOR=default
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    - API=22

# Defining cache directories
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

# Configuring Sonarcloud
addons:
  sonarcloud:
    organization: "federicoguerri-github"
    token:
        secure: ${SONAR_TOKEN}

# Definig android components: play Services, maven repository and google Api
android:
  components:
    - extra-google-google_play_services
    - extra-google-m2repository
    - addon-google_apis-google-22
    
install:
  # Accept SDK license, so Android Gradle plugin can install dependencies.
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
  
  # Install tools, android emulator image, android SDK, with sdkmanager tool.
  # Disable sdkmanager warning.
  - echo 'count=0' > /home/travis/.android/repositories.cfg
  
  #Install platform-tools and tools
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null
  
  #Install Gradle build-tools and Android SDK
  - echo y | sdkmanager "build-tools;28.0.3" >/dev/null
  - echo y | sdkmanager "platforms;android-$API" >/dev/null

  # Use canary channel to workaround emulator problem, also add support x86_64 and 29.x.x
  - echo y | sdkmanager --channel=4 "emulator" >/dev/null 
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" >/dev/null
  
  # Create the emulator for Instrumentation tests
  - echo no | avdmanager create avd --force -n testEmulator -k "system-images;android-$API;$EMU_FLAVOR;$ABI"
  - emulator -avd testEmulator -no-accel -no-snapshot -no-window -qemu -m 2048 &
  
  # Waiting for emulator to be online
  - android-wait-for-emulator

script:
  # Run junit tests
  - ./gradlew testDebugUnitTestCoverage

  # Disable emulator's animations
  - adb -s emulator-5554 shell settings put global window_animation_scale 0 &
  - adb -s emulator-5554 shell settings put global transition_animation_scale 0 &
  - adb -s emulator-5554 shell settings put global animator_duration_scale 0 &

  # Tapping on "WAIT" button of dialog
  - adb -s emulator-5554 shell input tap 297 478 &
  - sleep 2
  - adb -s emulator-5554 shell input tap 305 484 &
  - sleep 2
  - adb -s emulator-5554 shell input tap 320 490 &
  - sleep 2
  
  # Unlock the emulator
  - adb -s emulator-5554 shell input keyevent 82 &

  # Run instrumentation tests and wait for result for 50 minutes
  - travis_wait 50 ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.size=medium

  #Run sonarqube
  - ./gradlew sonarqube

after_success:
  # Upload coverage to coveralls
  - ./gradlew coveralls

# Email configuration
notifications:
    email:
      recipients:
        - fede95gg@gmail.com
      on_success: change
      on_failure: change
